{"version":3,"sources":["components/app/App.module.css","components/header/Header.module.css","components/people-page/PeoplePage.module.css","components/random-planet/RandomPlanet.module.css","components/item-details/ItemDetails.module.css","components/item-list/ItemList.module.css","components/error-indicator/ErrorIndicator.module.css","components/error-indicator/boom.svg","components/header/Header.js","services/swapi-service.js","components/spinner/Spinner.js","components/error-indicator/ErrorIndicator.js","components/random-planet/RandomPlanet.js","components/item-list/ItemList.js","components/item-details/ItemDetails.js","components/people-page/PeoplePage.js","components/planet-page/PlanetPage.js","components/starships-page/StarshipPage.js","components/app/App.js","index.js"],"names":["module","exports","Header","headerClassnames","style","container","styles","header","className","join","nav","list","listItem","to","link","SwapiService","getResource","url","a","async","fetch","res","ok","Error","json","getAllPeople","results","map","_transformPerson","getPersonById","id","person","getAllPlanets","_transformPlanet","getPlanetById","planet","getAllStarShips","_transformStarShip","getStarShipById","starship","getPersonImage","getStarshipImage","getPlanetImage","_extractId","item","match","type","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","birth_year","eyeColor","eye_color","Spinner","ErrorIndicator","src","icon","alt","RandomPlanet","swapiService","state","loading","error","onPlanetLoaded","setState","onError","err","updatePlanet","Math","floor","random","then","catch","this","interval","setInterval","clearInterval","classNames","planetSection","hasData","errMessage","spinner","content","Component","PlanetView","image","planetPicture","title","ItemList","itemList","getData","props","arr","label","renderItem","key","onClick","onItemSelected","items","renderItems","personSection","ItemDetails","updateItem","itemId","getItems","getImageUrl","prevProps","selectItem","params","Object","entries","filter","param","itemDetailsSection","itemImg","itemGroup","PeoplePage","selectedItem","hasError","info","containerSection","PlanetPage","stylePage","StarshipPage","App","console","log","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41307f0c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__tn4g6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__uWSP5\",\"nav\":\"Header_nav__8cVXp\",\"list\":\"Header_list__3ctnT\",\"listItem\":\"Header_listItem__3Ni-K\",\"link\":\"Header_link__20nmC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerSection\":\"PeoplePage_containerSection__3GZx6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"planetSection\":\"RandomPlanet_planetSection__38jmI\",\"planetPicture\":\"RandomPlanet_planetPicture__Mie3v\",\"title\":\"RandomPlanet_title__37mRL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemDetailsSection\":\"ItemDetails_itemDetailsSection__1Fv4O\",\"itemList\":\"ItemDetails_itemList__3vVjl\",\"itemImg\":\"ItemDetails_itemImg__1Aw7p\",\"itemGroup\":\"ItemDetails_itemGroup__3UIJ0\",\"selectItem\":\"ItemDetails_selectItem__3VBQu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"personSection\":\"ItemList_personSection__1AvTA\",\"itemList\":\"ItemList_itemList__1ieUv\",\"item\":\"ItemList_item__141y9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"ErrorIndicator_icon__264q9\"};","module.exports = __webpack_public_path__ + \"static/media/boom.79434f58.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./Header.module.css\";\r\nimport style from \"../app/App.module.css\";\r\nconst Header = () => {\r\n  let headerClassnames = [style.container, styles.header];\r\n  return (\r\n    <header className={headerClassnames.join(\" \")}>\r\n      <h1>Star DB</h1>\r\n      <nav className={styles.nav}>\r\n        <ul className={styles.list}>\r\n          <li className={styles.listItem}>\r\n            <Link to=\"/\" className={styles.link}>\r\n              People\r\n            </Link>\r\n          </li>\r\n          <li className={styles.listItem}>\r\n            <Link to=\"/planets\" className={styles.link}>\r\n              Planets\r\n            </Link>\r\n          </li>\r\n          <li className={styles.listItem}>\r\n            <Link to=\"/starships\" className={styles.link}>\r\n              Starships\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default class SwapiService {\r\n  getResource = async url => {\r\n    const res = await fetch(url);\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}`);\r\n    }\r\n    return await res.json();\r\n  };\r\n\r\n  getAllPeople = async () => {\r\n    const res = await this.getResource(`https://swapi.co/api/people/`);\r\n    return res.results.map(this._transformPerson);\r\n  };\r\n  getPersonById = async id => {\r\n    const person = await this.getResource(`https://swapi.co/api/people/${id}`);\r\n    return this._transformPerson(person);\r\n  };\r\n  getAllPlanets = async () => {\r\n    const res = await this.getResource(`https://swapi.co/api/planets/`);\r\n    return res.results.map(this._transformPlanet);\r\n  };\r\n  getPlanetById = async id => {\r\n    const planet = await this.getResource(`https://swapi.co/api/planets/${id}`);\r\n    return this._transformPlanet(planet);\r\n  };\r\n  getAllStarShips = async () => {\r\n    const res = await this.getResource(`https://swapi.co/api/starships/`);\r\n    return res.results.map(this._transformStarShip);\r\n  };\r\n  getStarShipById = async id => {\r\n    const starship = await this.getResource(\r\n      `https://swapi.co/api/starships/${id}`\r\n    );\r\n    return this._transformStarShip(starship);\r\n  };\r\n  getPersonImage = ({ id }) => {\r\n    return `https://starwars-visualguide.com/assets/img/characters/${id}.jpg`;\r\n  };\r\n\r\n  getStarshipImage = ({ id }) => {\r\n    return `https://starwars-visualguide.com/assets/img/starships/${id}.jpg`;\r\n  };\r\n  getPlanetImage = ({ id }) => {\r\n    return `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`;\r\n  };\r\n  _extractId = item => {\r\n    const idRegexExpr = /\\/([0-9]*)\\/$/;\r\n    return item.url.match(idRegexExpr)[1];\r\n  };\r\n  _transformPlanet = planet => {\r\n    return {\r\n      type: \"planet\",\r\n      id: this._extractId(planet),\r\n      name: planet.name,\r\n      population: planet.population,\r\n      rotationPeriod: planet.rotation_period,\r\n      diameter: planet.diameter\r\n    };\r\n  };\r\n  _transformStarShip = starship => {\r\n    return {\r\n      type: \"ship\",\r\n      id: this._extractId(starship),\r\n      name: starship.name,\r\n      model: starship.model,\r\n      manufacturer: starship.manufacturer,\r\n      costInCredits: starship.costInCredits,\r\n      length: starship.length,\r\n      crew: starship.crew,\r\n      passengers: starship.passengers,\r\n      cargoCapacity: starship.cargoCapacity\r\n    };\r\n  };\r\n  _transformPerson = person => {\r\n    return {\r\n      type: \"person\",\r\n      id: this._extractId(person),\r\n      name: person.name,\r\n      gender: person.gender,\r\n      birthYear: person.birth_year,\r\n      eyeColor: person.eye_color\r\n    };\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"./spinner.css\";\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loadingio-spinner-spinner-ekz0i7buav\">\r\n      <div className=\"ldio-tlzn7zafmzn\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport styles from \"./ErrorIndicator.module.css\";\r\nimport icon from \"./boom.svg\";\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div>\r\n      <img src={icon} alt=\"error icon\" className={styles.icon} />\r\n      <p>BOOM!</p>\r\n      <span>something has gone terribly wrong</span>\r\n      <span>(but we have already sent droid to fix it)</span>\r\n    </div>\r\n  );\r\n};\r\nexport default ErrorIndicator;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./RandomPlanet.module.css\";\r\nimport style from \"../app/App.module.css\";\r\nimport SwapiService from \"../../services/swapi-service\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorIndicator from \"../error-indicator/ErrorIndicator\";\r\nexport default class RandomPlanet extends Component {\r\n  swapiService = new SwapiService();\r\n  state = {\r\n    planet: {},\r\n    loading: true,\r\n    error: false\r\n  };\r\n  componentDidMount() {\r\n    this.updatePlanet();\r\n    this.interval = setInterval(this.updatePlanet, 2500);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n  onPlanetLoaded = planet => {\r\n    this.setState({ planet, loading: false });\r\n  };\r\n\r\n  onError = err => {\r\n    this.setState({ error: true, loading: false });\r\n  };\r\n\r\n  updatePlanet = () => {\r\n    const id = Math.floor(Math.random() * 10) + 3;\r\n    this.swapiService\r\n      .getPlanetById(id)\r\n      .then(this.onPlanetLoaded)\r\n      .catch(this.onError);\r\n  };\r\n  render() {\r\n    const classNames = [style.container, styles.planetSection];\r\n    const { planet, loading, error } = this.state;\r\n    const hasData = !(loading || error);\r\n    const errMessage = error ? <ErrorIndicator /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = hasData ? <PlanetView planet={planet} /> : null;\r\n    return (\r\n      <section className={classNames.join(\" \")}>\r\n        {errMessage}\r\n        {spinner}\r\n        {content}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst PlanetView = ({ planet }) => {\r\n  const { id, name, population, rotationPeriod, diameter } = planet;\r\n\r\n  const image = `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`;\r\n  return (\r\n    <>\r\n      <img\r\n        alt=\"some planet\"\r\n        src={image}\r\n        className={styles.planetPicture}\r\n      />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <ul>\r\n          <li>\r\n            <span className={styles.title}>Population: </span>\r\n            <span>{population}</span>\r\n          </li>\r\n          <li>\r\n            <span className={styles.title}>Rotation period: </span>\r\n            <span>{rotationPeriod}</span>\r\n          </li>\r\n          <li>\r\n            <span className={styles.title}>Diameter: </span>\r\n            <span>{diameter}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ItemList.module.css\";\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\nclass ItemList extends Component {\r\n  state = {\r\n    itemList: null\r\n  };\r\n  componentDidMount() {\r\n    const { getData } = this.props;\r\n    getData().then(itemList => {\r\n      this.setState({ itemList });\r\n    });\r\n  }\r\n  renderItems(arr) {\r\n    return arr.map(item => {\r\n      const { id } = item;\r\n      const label = this.props.renderItem(item);\r\n      return (\r\n        <li\r\n          key={id}\r\n          onClick={() => this.props.onItemSelected(id)}\r\n          className={styles.item}\r\n        >\r\n          {label}\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    const { itemList } = this.state;\r\n    if (!itemList) {\r\n      return <Spinner />;\r\n    }\r\n    const items = this.renderItems(itemList);\r\n    const classNames = [styles.personSection];\r\n    return (\r\n      <section className={classNames.join(\" \")}>\r\n        <ul className={styles.itemList}>{items}</ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemList;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ItemDetails.module.css\";\r\nclass ItemDetails extends Component {\r\n  state = {\r\n    item: null,\r\n    image: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateItem();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.itemId !== prevProps.itemId) {\r\n      this.updateItem();\r\n    }\r\n  }\r\n  updateItem = () => {\r\n    const { itemId, getItems, getImageUrl } = this.props;\r\n    if (!itemId) {\r\n      return;\r\n    }\r\n    getItems(itemId).then(item => {\r\n      this.setState({ item, image: getImageUrl(item) });\r\n    });\r\n  };\r\n  render() {\r\n    if (!this.state.item) {\r\n      return (\r\n        <span className={styles.selectItem}>\r\n          Select a {this.props.title} from the list\r\n        </span>\r\n      );\r\n    }\r\n    const { item } = this.state;\r\n    const { image } = this.state;\r\n    const params = Object.entries(item)\r\n      .filter(param => param[0] !== \"id\" && param[0] !== \"type\")\r\n      .map(param => (\r\n        <li key={param[0]}>\r\n          {param[0]}: {param[1]}\r\n        </li>\r\n      ));\r\n    return (\r\n      <section className={styles.itemDetailsSection}>\r\n        <ul className={styles.itemList}>\r\n          <li>\r\n            <img className={styles.itemImg} src={image} alt=\"character\" />\r\n          </li>\r\n          <li className={styles.itemGroup}>\r\n            <ul>{params}</ul>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemDetails;\r\n","import React, { Component } from \"react\";\r\nimport ItemList from \"../item-list/ItemList\";\r\nimport ItemDetails from \"../item-details/ItemDetails\";\r\nimport ErrorIndicator from \"../error-indicator/ErrorIndicator\";\r\nimport SwapiService from \"../../services/swapi-service\";\r\nimport style from \"../app/App.module.css\";\r\nimport styles from \"./PeoplePage.module.css\";\r\nclass PeoplePage extends Component {\r\n  swapiService = new SwapiService();\r\n  state = {\r\n    selectedItem: null,\r\n    hasError: false\r\n  };\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n  onItemSelected = id => {\r\n    this.setState({ selectedItem: id });\r\n  };\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n    const classNames = [style.container, styles.containerSection];\r\n    return (\r\n      <div className={classNames.join(\" \")}>\r\n        <ItemList\r\n          onItemSelected={this.onItemSelected}\r\n          getData={this.swapiService.getAllPeople}\r\n          renderItem={item =>\r\n            `${item.name} (${item.gender}, ${item.birthYear})`\r\n          }\r\n        />\r\n\r\n        <ItemDetails\r\n          itemId={this.state.selectedItem}\r\n          getItems={this.swapiService.getPersonById}\r\n          getImageUrl={this.swapiService.getPersonImage}\r\n          title={\"person\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PeoplePage;\r\n","import React, { Component } from \"react\";\r\nimport SwapiService from \"../../services/swapi-service\";\r\nimport ItemList from \"../item-list/ItemList\";\r\nimport ItemDetails from \"../item-details/ItemDetails\";\r\nimport ErrorIndicator from \"../error-indicator/ErrorIndicator\";\r\nimport style from \"../app/App.module.css\";\r\nimport stylePage from \"../people-page/PeoplePage.module.css\"\r\nclass PlanetPage extends Component {\r\n  swapiService = new SwapiService();\r\n  state = {\r\n    selectedItem: null,\r\n    hasError: false\r\n  };\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n  onItemSelected = id => {\r\n    this.setState({ selectedItem: id });\r\n  };\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n    const classNames = [style.container, stylePage.containerSection];\r\n    return (\r\n      <div className={classNames.join(\" \")}>\r\n        <ItemList\r\n          onItemSelected={this.onItemSelected}\r\n          getData={this.swapiService.getAllPlanets}\r\n          renderItem={item =>\r\n            `${item.name} (${item.population}, ${item.diameter})`\r\n          }\r\n        />\r\n\r\n        <ItemDetails\r\n          itemId={this.state.selectedItem}\r\n          getItems={this.swapiService.getPlanetById}\r\n          getImageUrl={this.swapiService.getPlanetImage}\r\n          title={\"planet\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlanetPage;\r\n","import React, { Component } from \"react\";\r\nimport ItemList from \"../item-list/ItemList\";\r\nimport ItemDetails from \"../item-details/ItemDetails\";\r\nimport ErrorIndicator from \"../error-indicator/ErrorIndicator\";\r\nimport SwapiService from \"../../services/swapi-service\";\r\nimport style from \"../app/App.module.css\";\r\nimport stylePage from \"../people-page/PeoplePage.module.css\";\r\nclass StarshipPage extends Component {\r\n  swapiService = new SwapiService();\r\n  state = {\r\n    selectedItem: null,\r\n    hasError: false\r\n  };\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n  onItemSelected = id => {\r\n    this.setState({ selectedItem: id });\r\n  };\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n    const classNames = [style.container, stylePage.containerSection];\r\n    return (\r\n      <div className={classNames.join(\" \")}>\r\n        <ItemList\r\n          onItemSelected={this.onItemSelected}\r\n          getData={this.swapiService.getAllStarShips}\r\n          renderItem={item => `${item.name} (${item.model}, ${item.length})`}\r\n        />\r\n\r\n        <ItemDetails\r\n          itemId={this.state.selectedItem}\r\n          getItems={this.swapiService.getStarShipById}\r\n          getImageUrl={this.swapiService.getStarshipImage}\r\n          title={\"starship\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StarshipPage;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\n\r\nimport Header from \"../header/Header\";\r\nimport RandomPlanet from \"../random-planet/RandomPlanet\";\r\nimport ErrorIndicator from \"../error-indicator/ErrorIndicator\";\r\nimport PeoplePage from \"../people-page/PeoplePage\";\r\nimport PlanetPage from \"../planet-page/PlanetPage\";\r\nimport StarshipPage from \"../starships-page/StarshipPage\";\r\nimport \"./App.module.css\";\r\nimport SwapiService from \"../../services/swapi-service\";\r\n\r\nclass App extends Component {\r\n  swapiService = new SwapiService();\r\n  state = {\r\n    selectedItem: null,\r\n    hasError: false\r\n  };\r\n  onItemSelected = id => {\r\n    this.setState({ selectedItem: id });\r\n  };\r\n  componentDidCatch() {\r\n    console.log(\"Componentdidctach\");\r\n    this.setState({ hasError: true });\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Header />\r\n          <RandomPlanet />\r\n          <Switch>\r\n            <PlanetPage path=\"/planets\" />\r\n            <StarshipPage path=\"/starships\" />\r\n            <PeoplePage path=\"/\" />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/app/App\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}